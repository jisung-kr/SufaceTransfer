//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12 [unused]
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16 [unused]
//   float4 gFogColor;                  // Offset:  448 Size:    16 [unused]
//   float gFogStart;                   // Offset:  464 Size:     4 [unused]
//   float gFogRange;                   // Offset:  468 Size:     4 [unused]
//   float2 cbPerObjectPad2;            // Offset:  472 Size:     8 [unused]
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  480
//       float FalloffStart;            // Offset:  492
//       float3 Direction;              // Offset:  496
//       float FalloffEnd;              // Offset:  508
//       float3 Position;               // Offset:  512
//       float SpotPower;               // Offset:  524
//
//   } gLights[16];                     // Offset:  480 Size:   768 [unused]
//
// }
//
// Resource bind info for gInstanceData
// {
//
//   struct InstanceData
//   {
//       
//       float4x4 World;                // Offset:    0
//       float4x4 TexTransform;         // Offset:   64
//       uint MaterialIndex;            // Offset:  128
//       uint InstPad1;                 // Offset:  132
//       uint InstPad2;                 // Offset:  136
//
//   } $Element;                        // Offset:    0 Size:   140
//
// }
//
// Resource bind info for gMaterialData
// {
//
//   struct MaterialData
//   {
//       
//       float4 DiffuseAlbedo;          // Offset:    0
//       float3 FresnelR0;              // Offset:   16
//       float Roughness;               // Offset:   28
//       float4x4 MatTransform;         // Offset:   32
//       uint DiffuseMapIndex;          // Offset:   96
//       uint NormalMapIndex;           // Offset:  100
//       uint SpecularMapIndex;         // Offset:  104
//       uint MatPad2;                  // Offset:  108
//
//   } $Element;                        // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// gInstanceData                     texture  struct         r/o      T0      t0,space1      1 
// gMaterialData                     texture  struct         r/o      T1      t1,space1      1 
// cbPass                            cbuffer      NA          NA     CB0            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TANGENT                  0   xyz         3     NONE   float   xyz 
// SV_InstanceID            0   x           4   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyz         3     NONE   float   xyz 
// TEXCOORD                 0   xy          4     NONE   float   xy  
// MATINDEX                 0   x           5     NONE    uint   x   
//
vs_5_1
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[0:0][20], immediateIndexed, space=0
dcl_resource_structured T0[0:0], 140, space=1
dcl_resource_structured T1[1:1], 112, space=1
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyz
dcl_input_sgv v4.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output o5.x
dcl_temps 13
//
// Initial variable locations:
//   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
//   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
//   v2.x <- vin.TexC.x; v2.y <- vin.TexC.y; 
//   v3.x <- vin.TangentL.x; v3.y <- vin.TangentL.y; v3.z <- vin.TangentL.z; 
//   v4.x <- instanceID; 
//   o5.x <- <VS return value>.MatIndex; 
//   o4.x <- <VS return value>.TexC.x; o4.y <- <VS return value>.TexC.y; 
//   o3.x <- <VS return value>.TangentW.x; o3.y <- <VS return value>.TangentW.y; o3.z <- <VS return value>.TangentW.z; 
//   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
//   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
//   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
//
#line 59 "C:\Users\s-jis\source\repos\skfkwltjd\SufaceTransfer\FBXReader\Shaders\Default.hlsl"
ld_structured r0.x, v4.x, l(0), T0[0].xxxx  // r0.x <- instData.World._m00
ld_structured r1.x, v4.x, l(16), T0[0].xxxx  // r1.x <- instData.World._m01
ld_structured r2.x, v4.x, l(32), T0[0].xxxx  // r2.x <- instData.World._m02
ld_structured r3.x, v4.x, l(48), T0[0].xxxx  // r3.x <- instData.World._m03
ld_structured r0.y, v4.x, l(4), T0[0].xxxx  // r0.y <- instData.World._m10
ld_structured r1.y, v4.x, l(20), T0[0].xxxx  // r1.y <- instData.World._m11
ld_structured r2.y, v4.x, l(36), T0[0].xxxx  // r2.y <- instData.World._m12
ld_structured r3.y, v4.x, l(52), T0[0].xxxx  // r3.y <- instData.World._m13
ld_structured r0.z, v4.x, l(8), T0[0].xxxx  // r0.z <- instData.World._m20
ld_structured r1.z, v4.x, l(24), T0[0].xxxx  // r1.z <- instData.World._m21
ld_structured r2.z, v4.x, l(40), T0[0].xxxx  // r2.z <- instData.World._m22
ld_structured r3.z, v4.x, l(56), T0[0].xxxx  // r3.z <- instData.World._m23
ld_structured r0.w, v4.x, l(12), T0[0].xxxx  // r0.w <- instData.World._m30
ld_structured r1.w, v4.x, l(28), T0[0].xxxx  // r1.w <- instData.World._m31
ld_structured r2.w, v4.x, l(44), T0[0].xxxx  // r2.w <- instData.World._m32
ld_structured r3.w, v4.x, l(60), T0[0].xxxx  // r3.w <- instData.World._m33
ld_structured r4.x, v4.x, l(64), T0[0].xxxx  // r4.x <- instData.TexTransform._m00
ld_structured r5.x, v4.x, l(80), T0[0].xxxx  // r5.x <- instData.TexTransform._m01
ld_structured r6.x, v4.x, l(96), T0[0].xxxx  // r6.x <- instData.TexTransform._m02
ld_structured r7.x, v4.x, l(112), T0[0].xxxx  // r7.x <- instData.TexTransform._m03
ld_structured r4.y, v4.x, l(68), T0[0].xxxx  // r4.y <- instData.TexTransform._m10
ld_structured r5.y, v4.x, l(84), T0[0].xxxx  // r5.y <- instData.TexTransform._m11
ld_structured r6.y, v4.x, l(100), T0[0].xxxx  // r6.y <- instData.TexTransform._m12
ld_structured r7.y, v4.x, l(116), T0[0].xxxx  // r7.y <- instData.TexTransform._m13
ld_structured r4.z, v4.x, l(72), T0[0].xxxx  // r4.z <- instData.TexTransform._m20
ld_structured r5.z, v4.x, l(88), T0[0].xxxx  // r5.z <- instData.TexTransform._m21
ld_structured r6.z, v4.x, l(104), T0[0].xxxx  // r6.z <- instData.TexTransform._m22
ld_structured r7.z, v4.x, l(120), T0[0].xxxx  // r7.z <- instData.TexTransform._m23
ld_structured r4.w, v4.x, l(76), T0[0].xxxx  // r4.w <- instData.TexTransform._m30
ld_structured r5.w, v4.x, l(92), T0[0].xxxx  // r5.w <- instData.TexTransform._m31
ld_structured r6.w, v4.x, l(108), T0[0].xxxx  // r6.w <- instData.TexTransform._m32
ld_structured r7.w, v4.x, l(124), T0[0].xxxx  // r7.w <- instData.TexTransform._m33
ld_structured r8.x, v4.x, l(128), T0[0].xxxx  // r8.x <- instData.MaterialIndex

#line 60
mov r0.xyzw, r0.xyzw  // r0.x <- world._m00; r0.y <- world._m10; r0.z <- world._m20; r0.w <- world._m30
mov r1.xyzw, r1.xyzw  // r1.x <- world._m01; r1.y <- world._m11; r1.z <- world._m21; r1.w <- world._m31
mov r2.xyzw, r2.xyzw  // r2.x <- world._m02; r2.y <- world._m12; r2.z <- world._m22; r2.w <- world._m32
mov r3.xyzw, r3.xyzw  // r3.x <- world._m03; r3.y <- world._m13; r3.z <- world._m23; r3.w <- world._m33

#line 61
mov r4.xyzw, r4.xyzw  // r4.x <- texTransform._m00; r4.y <- texTransform._m10; r4.z <- texTransform._m20; r4.w <- texTransform._m30
mov r5.xyzw, r5.xyzw  // r5.x <- texTransform._m01; r5.y <- texTransform._m11; r5.z <- texTransform._m21; r5.w <- texTransform._m31
mov r6.xyzw, r6.xyzw  // r6.x <- texTransform._m02; r6.y <- texTransform._m12; r6.z <- texTransform._m22; r6.w <- texTransform._m32
mov r7.xyzw, r7.xyzw  // r7.x <- texTransform._m03; r7.y <- texTransform._m13; r7.z <- texTransform._m23; r7.w <- texTransform._m33

#line 62
mov r8.x, r8.x  // r8.x <- matIndex

#line 64
mov r8.x, r8.x  // r8.x <- vout.MatIndex

#line 67
ld_structured r9.x, r8.x, l(32), T1[1].xxxx  // r9.x <- matData.MatTransform._m00
ld_structured r10.x, r8.x, l(48), T1[1].xxxx  // r10.x <- matData.MatTransform._m01
ld_structured r9.y, r8.x, l(36), T1[1].xxxx  // r9.y <- matData.MatTransform._m10
ld_structured r10.y, r8.x, l(52), T1[1].xxxx  // r10.y <- matData.MatTransform._m11
ld_structured r9.z, r8.x, l(40), T1[1].xxxx  // r9.z <- matData.MatTransform._m20
ld_structured r10.z, r8.x, l(56), T1[1].xxxx  // r10.z <- matData.MatTransform._m21
ld_structured r9.w, r8.x, l(44), T1[1].xxxx  // r9.w <- matData.MatTransform._m30
ld_structured r10.w, r8.x, l(60), T1[1].xxxx  // r10.w <- matData.MatTransform._m31

#line 92
mov r11.xyz, v0.xyzx
mov r11.w, l(1.000000)
dp4 r12.x, r11.xyzw, r0.xyzw  // r12.x <- posW.x
dp4 r12.y, r11.xyzw, r1.xyzw  // r12.y <- posW.y
dp4 r12.z, r11.xyzw, r2.xyzw  // r12.z <- posW.z
dp4 r12.w, r11.xyzw, r3.xyzw  // r12.w <- posW.w

#line 93
mov r12.xyz, r12.xyzx  // r12.x <- vout.PosW.x; r12.y <- vout.PosW.y; r12.z <- vout.PosW.z

#line 96
dp3 r3.x, v1.xyzx, r0.xyzx  // r3.x <- vout.NormalW.x
dp3 r3.y, v1.xyzx, r1.xyzx  // r3.y <- vout.NormalW.y
dp3 r3.z, v1.xyzx, r2.xyzx  // r3.z <- vout.NormalW.z

#line 97
dp3 r0.x, v3.xyzx, r0.xyzx  // r0.x <- vout.TangentW.x
dp3 r0.y, v3.xyzx, r1.xyzx  // r0.y <- vout.TangentW.y
dp3 r0.z, v3.xyzx, r2.xyzx  // r0.z <- vout.TangentW.z

#line 100
dp4 r1.x, r12.xyzw, CB0[0][16].xyzw  // r1.x <- vout.PosH.x
dp4 r1.y, r12.xyzw, CB0[0][17].xyzw  // r1.y <- vout.PosH.y
dp4 r1.z, r12.xyzw, CB0[0][18].xyzw  // r1.z <- vout.PosH.z
dp4 r1.w, r12.xyzw, CB0[0][19].xyzw  // r1.w <- vout.PosH.w

#line 103
mov r2.xy, v2.xyxx
mov r2.zw, l(0,0,0,1.000000)
dp4 r4.x, r2.xyzw, r4.xyzw  // r4.x <- texC.x
dp4 r4.y, r2.xyzw, r5.xyzw  // r4.y <- texC.y
dp4 r4.z, r2.xyzw, r6.xyzw  // r4.z <- texC.z
dp4 r4.w, r2.xyzw, r7.xyzw  // r4.w <- texC.w

#line 104
dp4 r2.x, r4.xyzw, r9.xyzw  // r2.x <- vout.TexC.x
dp4 r2.y, r4.xyzw, r10.xyzw  // r2.y <- vout.TexC.y

#line 106
mov o0.xyzw, r1.xyzw
mov o1.xyz, r12.xyzx
mov o2.xyz, r3.xyzx
mov o3.xyz, r0.xyzx
mov o4.xy, r2.xyxx
mov o5.x, r8.x
ret 
// Approximately 83 instruction slots used
